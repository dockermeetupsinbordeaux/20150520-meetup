input {
  syslog {
    port => 514
    type => syslog
  }
}

filter {
  grok {
    match => { "message" => "(?m)<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} <(?<syslog_filepath>.*)/(?<syslog_basename>[^.]*).log> %{GREEDYDATA:syslog_message}" }
    add_tag => [ "syslog_grok_ok" ]
  }
  syslog_pri { }
  if [syslog_basename] == "nginx-access" {
    grok {
      match => { "syslog_message" => "(?m)%{IPORHOST:http_clientip} - - \[%{TIMESTAMP_ISO8601:http_timestamp}\] \"%{WORD:http_verb} %{URIPATHPARAM:http_request} HTTP/%{NUMBER:http_version}\" %{NUMBER:http_response} (?:%{NUMBER:http_bytes_sent}|-) %{NUMBER:http_request_time} \"-\" \"%{GREEDYDATA:http_agent}\""}
      tag_on_failure => [ "nginx_access_ko"]
      add_tag => ["nginx-access"]
    }
    date {
      match => [ "http_timestamp", "ISO8601" ]
      remove_field => [ "http_timestamp" ]
    }
  } else {
    # use syslog event timestamp for @timestamp field
    date {
      match => [ "syslog_timestamp", "MMM dd YYY HH:mm:ss",
            "MMM  d YYY HH:mm:ss", "ISO8601" ]
      remove_field => [ "syslog_timestamp" ]
    }
  }
}

output {
  file { path => "/var/log/containers/all.txt" }
  if "syslog_grok_ok" in [tags] {
    elasticsearch {
      host => "ELASTICSEARCH_ADDR"
      port => ELASTICSEARCH_PORT
    }
    if "nginx_access_ko" in [tags] {
      file { path => "/var/log/containers/failed_logstash_nginx_access_events-%{+YYYY-MM-dd}.txt"
      }
    } else {
      if "nginx-access" in [tags] {
        riemann {
          host => "riemann"
          sender => "nginx"
          riemann_event => {
            "service" => "nginx-access"
            "metric" => "%{http_request_time}"
            "description" => ""
          }
        }
      }
    }
  } else {
    file { path => "/var/log/containers/failed_logstash_syslog_events-%{+YYYY-MM-dd}.txt" }
  }
}
